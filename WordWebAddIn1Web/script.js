function setAmount(val) {
  var amt = parseFloat(val)*100;
  document.getElementById('AMOUNT').value = amt.toFixed(0).toString();
}



function calculateSha1() {
  //first, calculate the OrderID in the background
  dt = Number(new Date);
  document.getElementById('ORDERID').value = "VKT_KHD19_"+dt;
  
  var shaPassPhrase = "VlaamseKampeertoeristen2019";
  
  //local function that only returns something when the given field (input
  //param) has a value set.
  //note that this one differs from the one inside calculateUrl()
  function buildFieldString(fieldName) {
    var fldVal
    try {
      fldVal = document.getElementById(fieldName).value;
    } catch(err) {
      fldVal = "";
    }
    if (fldVal != "") {
      return fieldName.toUpperCase()+"="+fldVal+shaPassPhrase;
    } else {
      return "";
    }
  }
  
  //compose the string that will be hashed: all fields that have a value,
  //in alphabetical order, in FIELDNAME=fieldValue format, separated/salted by
  //the shaPassPhrase
  var str = "";
  
  //the list of fields used hereunder, and its order are both according to
  //https://support-paypage.v-psp.com/~/media/kdb/integration%20guides/sha-in_params.ashx?la=nl
  str += buildFieldString("ACCEPTANCE");
  str += buildFieldString("ACCEPTURL");
  str += buildFieldString("ADDMATCH");
  str += buildFieldString("ADDRMATCH");
  str += buildFieldString("AIACTIONNUMBER");
  str += buildFieldString("AIAGIATA");
  str += buildFieldString("AIAIRNAME");
  str += buildFieldString("AIAIRTAX");
  str += buildFieldString("AIBOOKIND*XX*");
  str += buildFieldString("AICARRIER*XX*");
  str += buildFieldString("AICHDET");
  str += buildFieldString("AICLASS*XX*");
  str += buildFieldString("AICONJTI");
  str += buildFieldString("AIDEPTCODE");
  str += buildFieldString("AIDESTCITY*XX*");
  str += buildFieldString("AIDESTCITYL*XX*");
  str += buildFieldString("AIEXTRAPASNAME*XX*");
  str += buildFieldString("AIEYCD");
  str += buildFieldString("AIFLDATE*XX*");
  str += buildFieldString("AIFLNUM*XX*");
  str += buildFieldString("AIGLNUM");
  str += buildFieldString("AIINVOICE");
  str += buildFieldString("AIIRST");
  str += buildFieldString("AIORCITY*XX*");
  str += buildFieldString("AIORCITYL*XX*");
  str += buildFieldString("AIPASNAME");
  str += buildFieldString("AIPROJNUM");
  str += buildFieldString("AISTOPOV*XX*");
  str += buildFieldString("AITIDATE");
  str += buildFieldString("AITINUM");
  str += buildFieldString("AITINUML*XX*");
  str += buildFieldString("AITYPCH");
  str += buildFieldString("AIVATAMNT");
  str += buildFieldString("AIVATAPPL");
  str += buildFieldString("ALIAS");
  str += buildFieldString("ALIASOPERATION");
  str += buildFieldString("ALIASPERSISTEDAFTERUSE");
  str += buildFieldString("ALIASUSAGE");
  str += buildFieldString("ALLOWCORRECTION");
  str += buildFieldString("AMOUNT");
  str += buildFieldString("AMOUNT*XX*");
  str += buildFieldString("AMOUNTHTVA");
  str += buildFieldString("AMOUNTTVA");
  str += buildFieldString("ARP_TRN");
  str += buildFieldString("BACKURL");
  str += buildFieldString("BATCHID");
  str += buildFieldString("BGCOLOR");
  str += buildFieldString("BLVERNUM");
  str += buildFieldString("BIC");
  str += buildFieldString("BIN");
  str += buildFieldString("BRAND");
  str += buildFieldString("BRANDVISUAL");
  str += buildFieldString("BROWSERACCEPTHEADER");
  str += buildFieldString("BROWSERCOLORDEPTH");
  str += buildFieldString("BROWSERJAVAENABLED");
  str += buildFieldString("BROWSERLANGUAGE");
  str += buildFieldString("BROWSERSCREENHEIGHT");
  str += buildFieldString("BROWSERSCREENWIDTH");
  str += buildFieldString("BROWSERTIMEZONE");
  str += buildFieldString("BROWSERUSERAGENT");
  str += buildFieldString("BUTTONBGCOLOR");
  str += buildFieldString("BUTTONTXTCOLOR");
  str += buildFieldString("CANCELURL");
  str += buildFieldString("CARDNO");
  str += buildFieldString("CATALOGURL");
  str += buildFieldString("CAVV_3D");
  str += buildFieldString("CAVVALGORITHM_3D");
  str += buildFieldString("CERTID");
  str += buildFieldString("CHECK_AAV");
  str += buildFieldString("CIVILITY");
  str += buildFieldString("CN");
  str += buildFieldString("COF_INITIATOR");
  str += buildFieldString("COF_SCHEDULE");
  str += buildFieldString("COF_TRANSACTION");
  str += buildFieldString("COM");
  str += buildFieldString("COMPLUS");
  str += buildFieldString("CONVCCY");
  str += buildFieldString("COSTCENTER");
  str += buildFieldString("COSTCODE");
  str += buildFieldString("CREDITCODE");
  str += buildFieldString("CREDITDEBIT");
  str += buildFieldString("CUID");
  str += buildFieldString("CURRENCY");
  str += buildFieldString("CVC");
  str += buildFieldString("CVCFLAG");
  str += buildFieldString("DATA");
  str += buildFieldString("DATATYPE");
  str += buildFieldString("DATEIN");
  str += buildFieldString("DATEOUT");
  str += buildFieldString("DBXML");
  str += buildFieldString("DCC_COMMPERC");
  str += buildFieldString("DCC_CONVAMOUNT");
  str += buildFieldString("DCC_CONVCCY");
  str += buildFieldString("DCC_EXCHRATE");
  str += buildFieldString("DCC_EXCHRATETS");
  str += buildFieldString("DCC_INDICATOR");
  str += buildFieldString("DCC_MARGINPERC");
  str += buildFieldString("DCC_REF");
  str += buildFieldString("DCC_SOURCE");
  str += buildFieldString("DCC_VALID");
  str += buildFieldString("DECLINEURL");
  str += buildFieldString("DELIVERYDATE");
  str += buildFieldString("DEVICE");
  str += buildFieldString("DISCOUNTRATE");
  str += buildFieldString("DISPLAYMODE");
  str += buildFieldString("ECI");
  str += buildFieldString("ECI_3D");
  str += buildFieldString("ECOM_BILLTO_COMPANY");
  str += buildFieldString("ECOM_BILLTO_POSTAL_CITY");
  str += buildFieldString("ECOM_BILLTO_POSTAL_COUNTRYCODE");
  str += buildFieldString("ECOM_BILLTO_POSTAL_COUNTY");
  str += buildFieldString("ECOM_BILLTO_POSTAL_NAME_FIRST");
  str += buildFieldString("ECOM_BILLTO_POSTAL_NAME_LAST");
  str += buildFieldString("ECOM_BILLTO_POSTAL_NAME_PREFIX");
  str += buildFieldString("ECOM_BILLTO_POSTAL_POSTALCODE");
  str += buildFieldString("ECOM_BILLTO_POSTAL_STREET_LINE1");
  str += buildFieldString("ECOM_BILLTO_POSTAL_STREET_LINE2");
  str += buildFieldString("ECOM_BILLTO_POSTAL_STREET_LINE3");
  str += buildFieldString("ECOM_BILLTO_POSTAL_STREET_NUMBER");
  str += buildFieldString("ECOM_BILLTO_TELECOM_MOBILE_NUMBER");
  str += buildFieldString("ECOM_BILLTO_TELECOM_PHONE_NUMBER");
  str += buildFieldString("ECOM_CONSUMERID");
  str += buildFieldString("ECOM_CONSUMER_GENDER");
  str += buildFieldString("ECOM_CONSUMEROGID");
  str += buildFieldString("ECOM_CONSUMERORDERID");
  str += buildFieldString("ECOM_CONSUMERUSERALIAS");
  str += buildFieldString("ECOM_CONSUMERUSERPWD");
  str += buildFieldString("ECOM_CONSUMERUSERID");
  str += buildFieldString("ECOM_ESTIMATEDDELIVERYDATE");
  str += buildFieldString("ECOM_ESTIMATEDELIVERYDATE");
  str += buildFieldString("ECOM_PAYMENT_CARD_EXPDATE_MONTH");
  str += buildFieldString("ECOM_PAYMENT_CARD_EXPDATE_YEAR");
  str += buildFieldString("ECOM_PAYMENT_CARD_NAME");
  str += buildFieldString("ECOM_PAYMENT_CARD_VERIFICATION");
  str += buildFieldString("ECOM_SHIPMETHOD");
  str += buildFieldString("ECOM_SHIPMETHODDETAILS");
  str += buildFieldString("ECOM_SHIPMETHODSPEED");
  str += buildFieldString("ECOM_SHIPMETHODTYPE");
  str += buildFieldString("ECOM_SHIPTO_COMPANY");
  str += buildFieldString("ECOM_SHIPTO_DOB");
  str += buildFieldString("ECOM_SHIPTO_ONLINE_EMAIL");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_CITY");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_COUNTRYCODE");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_COUNTY");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_NAME_FIRST");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_NAME_LAST");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_NAME_PREFIX");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_POSTALCODE");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_STATE");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_STREET_LINE1");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_STREET_LINE2");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_STREET_NUMBER");
  str += buildFieldString("ECOM_SHIPTO_TELECOM_FAX_NUMBER");
  str += buildFieldString("ECOM_SHIPTO_TELECOM_MOBILE_NUMBER");
  str += buildFieldString("ECOM_SHIPTO_TELECOM_PHONE_NUMBER");
  str += buildFieldString("ECOM_SHIPTO_TVA");
  str += buildFieldString("ED");
  str += buildFieldString("EMAIL");
  str += buildFieldString("EXCEPTIONURL");
  str += buildFieldString("EXCLPMLIST");
  str += buildFieldString("EXECUTIONDATE*XX*");
  str += buildFieldString("FACEXCL*XX*");
  str += buildFieldString("FACTOTAL*XX*");
  str += buildFieldString("FIRSTCALL");
  str += buildFieldString("FLAG3D");
  str += buildFieldString("FONTTYPE");
  str += buildFieldString("FORCECODE1");
  str += buildFieldString("FORCECODE2");
  str += buildFieldString("FORCECODEHASH");
  str += buildFieldString("FORCEPROCESS");
  str += buildFieldString("FORCETP");
  str += buildFieldString("FP_ACTIV");
  str += buildFieldString("GENERIC_BL");
  str += buildFieldString("GIROPAY_ACCOUNT_NUMBER");
  str += buildFieldString("GIROPAY_BLZ");
  str += buildFieldString("GIROPAY_OWNER_NAME");
  str += buildFieldString("GLOBORDERID");
  str += buildFieldString("GUID");
  str += buildFieldString("HDFONTTYPE");
  str += buildFieldString("HDTBLBGCOLOR");
  str += buildFieldString("HDTBLTXTCOLOR");
  str += buildFieldString("HEIGHTFRAME");
  str += buildFieldString("HOMEURL");
  str += buildFieldString("HTTP_ACCEPT");
  str += buildFieldString("HTTP_USER_AGENT");
  str += buildFieldString("INCLUDE_BIN");
  str += buildFieldString("INCLUDE_COUNTRIES");
  str += buildFieldString("INITIAL_REC_TRN");
  str += buildFieldString("INVDATE");
  str += buildFieldString("INVDISCOUNT");
  str += buildFieldString("INVLEVEL");
  str += buildFieldString("INVORDERID");
  str += buildFieldString("ISSUERID");
  str += buildFieldString("IST_MOBILE");
  str += buildFieldString("ITEM_COUNT");
  str += buildFieldString("ITEMATTRIBUTES*XX*");
  str += buildFieldString("ITEMCATEGORY*XX*");
  str += buildFieldString("ITEMCOMMENTS*XX*");
  str += buildFieldString("ITEMDESC*XX*");
  str += buildFieldString("ITEMDISCOUNT*XX*");
  str += buildFieldString("ITEMFDMPRODUCTCATEG*XX*");
  str += buildFieldString("ITEMID*XX*");
  str += buildFieldString("ITEMNAME*XX*");
  str += buildFieldString("ITEMPRICE*XX*");
  str += buildFieldString("ITEMQUANT*XX*");
  str += buildFieldString("ITEMQUANTORIG*XX*");
  str += buildFieldString("ITEMUNITOFMEASURE*XX*");
  str += buildFieldString("ITEMVAT*XX*");
  str += buildFieldString("ITEMVATCODE*XX*");
  str += buildFieldString("ITEMWEIGHT*XX*");
  str += buildFieldString("LANGUAGE");
  str += buildFieldString("LEVEL1AUTHCPC");
  str += buildFieldString("LIDEXCL*XX*");
  str += buildFieldString("LIMITCLIENTSCRIPTUSAGE");
  str += buildFieldString("LINE_REF");
  str += buildFieldString("LINE_REF1");
  str += buildFieldString("LINE_REF2");
  str += buildFieldString("LINE_REF3");
  str += buildFieldString("LINE_REF4");
  str += buildFieldString("LINE_REF5");
  str += buildFieldString("LINE_REF6");
  str += buildFieldString("LIST_BIN");
  str += buildFieldString("LIST_COUNTRIES");
  str += buildFieldString("LOGO");
  str += buildFieldString("MANDATEID");
  str += buildFieldString("MAXITEMQUANT*XX*");
  str += buildFieldString("MERCHANTID");
  str += buildFieldString("MODE");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTAGEINDICATOR");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTCHANGE");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTCHANGEINDICATOR");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTDATE");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTPASSWORDCHANGE");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTPASSWORDCHANGEINDICATOR");
  str += buildFieldString("MPI.CHALLENGEWINDOWSIZE");
  str += buildFieldString("MPI.DELIVERYEMAILADDRESS");
  str += buildFieldString("MPI.DELIVERYTIMEFRAME");
  str += buildFieldString("MPI.GIFTCARDAMOUNT");
  str += buildFieldString("MPI.GIFTCARDCOUNT");
  str += buildFieldString("MPI.GIFTCARDCURRENCY");
  str += buildFieldString("MPI.HOMEPHONE.COUNTRYCODE");
  str += buildFieldString("MPI.HOMEPHONE.SUBSCRIBER");
  str += buildFieldString("MPI.MOBILEPHONE.COUNTRYCODE");
  str += buildFieldString("MPI.MOBILEPHONE.SUBSCRIBER");
  str += buildFieldString("MPI.NUMBEROFPURCHASEWITHACCOUNTINTHELASTSIXMONTHS");
  str += buildFieldString("MPI.PAYMENTACCOUNTAGE");
  str += buildFieldString("MPI.PAYMENTACCOUNTAGEINDICATOR");
  str += buildFieldString("MPI.PREORDERDATE");
  str += buildFieldString("MPI.PREORDERPURCHASEINDICATOR");
  str += buildFieldString("MPI.PROVISIONATTEMPTSINTHELAST24HOURS");
  str += buildFieldString("MPI.REORDERITEMSINDICATOR");
  str += buildFieldString("MPI.SHIPPINGADDRESSUSAGE");
  str += buildFieldString("MPI.SHIPPINGADDRESSWASFIRSTUSED");
  str += buildFieldString("MPI.SHIPPINGINDICATOR");
  str += buildFieldString("MPI.SHIPPINGNAMEANDCARDHOLDERNAMEAREIDENTICAL");
  str += buildFieldString("MPI.SUSPICIOUSACCOUNTACTIVITYDETECTED");
  str += buildFieldString("MPI.THREEDSREQUESTORAUTHENTICATIONDATA");
  str += buildFieldString("MPI.THREEDSREQUESTORAUTHENTICATIONMETHOD");
  str += buildFieldString("MPI.THREEDSREQUESTORAUTHENTICATIONTIMESTAMP");
  str += buildFieldString("MPI.THREEDSREQUESTORCHALLENGEINDICATOR");
  str += buildFieldString("MPI.THREEDSREQUESTORPRIORAUTHENTICATIONDATA");
  str += buildFieldString("MPI.THREEDSREQUESTORPRIORAUTHENTICATIONMETHOD");
  str += buildFieldString("MPI.THREEDSREQUESTORPRIORAUTHENTICATIONTIMESTAMP");
  str += buildFieldString("MPI.THREEDSREQUESTORPRIORREFERENCE");
  str += buildFieldString("MPI.TRANSACTIONACTIVITYINTHELAST24HOURS");
  str += buildFieldString("MPI.TRANSACTIONACTIVITYLASTYEAR ");
  str += buildFieldString("MPI.TRANSACTIONTYPE");
  str += buildFieldString("MPI.WORKPHONE.COUNTRYCODE");
  str += buildFieldString("MPI.WORKPHONE.SUBSCRIBER");
  str += buildFieldString("MTIME");
  str += buildFieldString("MVER");
  str += buildFieldString("NETAMOUNT");
  str += buildFieldString("OPERATION");
  str += buildFieldString("ORDERID");
  str += buildFieldString("ORDERSHIPCOST");
  str += buildFieldString("ORDERSHIPMETH");
  str += buildFieldString("ORDERSHIPTAX");
  str += buildFieldString("ORDERSHIPTAXCODE");
  str += buildFieldString("ORIG");
  str += buildFieldString("OR_INVORDERID");
  str += buildFieldString("OR_ORDERID");
  str += buildFieldString("OWNERADDRESS");
  str += buildFieldString("OWNERADDRESS2");
  str += buildFieldString("OWNERCTY");
  str += buildFieldString("OWNERTELNO");
  str += buildFieldString("OWNERTELNO2");
  str += buildFieldString("OWNERTOWN");
  str += buildFieldString("OWNERZIP");
  str += buildFieldString("PAIDAMOUNT");
  str += buildFieldString("PARAMPLUS");
  str += buildFieldString("PARAMVAR");
  str += buildFieldString("PAYID");
  str += buildFieldString("PAYMETHOD");
  str += buildFieldString("PM");
  str += buildFieldString("PMLIST");
  str += buildFieldString("PMLISTPMLISTTYPE");
  str += buildFieldString("PMLISTTYPE");
  str += buildFieldString("PMLISTTYPEPMLIST");
  str += buildFieldString("PMTYPE");
  str += buildFieldString("POPUP");
  str += buildFieldString("POST");
  str += buildFieldString("PSPID");
  str += buildFieldString("PSWD");
  str += buildFieldString("RECIPIENTACCOUNTNUMBER");
  str += buildFieldString("RECIPIENTDOB");
  str += buildFieldString("RECIPIENTLASTNAME");
  str += buildFieldString("RECIPIENTZIP");
  str += buildFieldString("REF");
  str += buildFieldString("REFER");
  str += buildFieldString("REFID");
  str += buildFieldString("REFKIND");
  str += buildFieldString("REF_CUSTOMERID");
  str += buildFieldString("REF_CUSTOMERREF");
  str += buildFieldString("REGISTRED");
  str += buildFieldString("REMOTE_ADDR");
  str += buildFieldString("REQGENFIELDS");
  str += buildFieldString("RNPOFFERT");
  str += buildFieldString("RTIMEOUT");
  str += buildFieldString("RTIMEOUTREQUESTEDTIMEOUT");
  str += buildFieldString("SCORINGCLIENT");
  str += buildFieldString("SEQUENCETYPE");
  str += buildFieldString("SETT_BATCH");
  str += buildFieldString("SID");
  str += buildFieldString("SIGNDATE");
  str += buildFieldString("STATUS_3D");
  str += buildFieldString("SUBSCRIPTION_ID");
  str += buildFieldString("SUB_AM");
  str += buildFieldString("SUB_AMOUNT");
  str += buildFieldString("SUB_COM");
  str += buildFieldString("SUB_COMMENT");
  str += buildFieldString("SUB_CUR");
  str += buildFieldString("SUB_ENDDATE");
  str += buildFieldString("SUB_ORDERID");
  str += buildFieldString("SUB_PERIOD_MOMENT");
  str += buildFieldString("SUB_PERIOD_MOMENT_M");
  str += buildFieldString("SUB_PERIOD_MOMENT_WW");
  str += buildFieldString("SUB_PERIOD_NUMBER");
  str += buildFieldString("SUB_PERIOD_NUMBER_D");
  str += buildFieldString("SUB_PERIOD_NUMBER_M");
  str += buildFieldString("SUB_PERIOD_NUMBER_WW");
  str += buildFieldString("SUB_PERIOD_UNIT");
  str += buildFieldString("SUB_STARTDATE");
  str += buildFieldString("SUB_STATUS");
  str += buildFieldString("TAAL");
  str += buildFieldString("TAXINCLUDED*XX*");
  str += buildFieldString("TBLBGCOLOR");
  str += buildFieldString("TBLTXTCOLOR");
  str += buildFieldString("TID");
  str += buildFieldString("TITLE");
  str += buildFieldString("TOTALAMOUNT");
  str += buildFieldString("TP");
  str += buildFieldString("TRACK2");
  str += buildFieldString("TXTBADDR2");
  str += buildFieldString("TXTCOLOR");
  str += buildFieldString("TXTOKEN");
  str += buildFieldString("TXTOKENTXTOKENPAYPAL");
  str += buildFieldString("TXSHIPPING");
  str += buildFieldString("TXSHIPPINGLOCATIONPROFILE");
  str += buildFieldString("TXURL");
  str += buildFieldString("TXVERIFIER");
  str += buildFieldString("TYPE_COUNTRY");
  str += buildFieldString("UCAF_AUTHENTICATION_DATA");
  str += buildFieldString("UCAF_PAYMENT_CARD_CVC2");
  str += buildFieldString("UCAF_PAYMENT_CARD_EXPDATE_MONTH");
  str += buildFieldString("UCAF_PAYMENT_CARD_EXPDATE_YEAR");
  str += buildFieldString("UCAF_PAYMENT_CARD_NUMBER");
  str += buildFieldString("USERID");
  str += buildFieldString("USERTYPE");
  str += buildFieldString("VERSION");
  str += buildFieldString("WBTU_MSISDN");
  str += buildFieldString("WBTU_ORDERID");
  str += buildFieldString("WEIGHTUNIT");
  str += buildFieldString("WIN3DS");
  str += buildFieldString("WITHROOT");
  str += buildFieldString("XDL");
  
  //Show the composed string on screen and in the console log
  document.getElementById('VKT_SHA1').innerHTML = str;
  console.log("str: "+str)
  //calculate the SHA1 hash for the string, put in the relevant field and log it
  //in the console log
  document.getElementById('SHASIGN').value = sha1(str);
  console.log("SHASIGN="+document.getElementById('SHASIGN').value)
}

function calculateUrl() {
  console.log("entered generateQr()");
  
  //local function that only returns something when the given field (input
  //param) has a value set.
  //note that this one differs from the one inside calculateSha1()
  function buildFieldString(fieldName) {
    var fldVal
    try {
      fldVal = document.getElementById(fieldName).value;
    } catch(err) {
      fldVal = "";
    }
    if (fldVal != "") {
      return fieldName.toUpperCase()+"="+encodeURIComponent(fldVal)+"&";
    } else {
      return "";
    }
  }
  
  //compose the string that will become the parameter list of the URL: all
  //fields that have a value, in alphabetical order, in FIELDNAME=fieldValue
  //format, with the fieldvalue URL-encoded and separated by "&"
  var str = "";
  
  //the list of fields used hereunder, and its order are both according to
  //https://support-paypage.v-psp.com/~/media/kdb/integration%20guides/sha-in_params.ashx?la=nl
  str += buildFieldString("ACCEPTANCE");
  str += buildFieldString("ACCEPTURL");
  str += buildFieldString("ADDMATCH");
  str += buildFieldString("ADDRMATCH");
  str += buildFieldString("AIACTIONNUMBER");
  str += buildFieldString("AIAGIATA");
  str += buildFieldString("AIAIRNAME");
  str += buildFieldString("AIAIRTAX");
  str += buildFieldString("AIBOOKIND*XX*");
  str += buildFieldString("AICARRIER*XX*");
  str += buildFieldString("AICHDET");
  str += buildFieldString("AICLASS*XX*");
  str += buildFieldString("AICONJTI");
  str += buildFieldString("AIDEPTCODE");
  str += buildFieldString("AIDESTCITY*XX*");
  str += buildFieldString("AIDESTCITYL*XX*");
  str += buildFieldString("AIEXTRAPASNAME*XX*");
  str += buildFieldString("AIEYCD");
  str += buildFieldString("AIFLDATE*XX*");
  str += buildFieldString("AIFLNUM*XX*");
  str += buildFieldString("AIGLNUM");
  str += buildFieldString("AIINVOICE");
  str += buildFieldString("AIIRST");
  str += buildFieldString("AIORCITY*XX*");
  str += buildFieldString("AIORCITYL*XX*");
  str += buildFieldString("AIPASNAME");
  str += buildFieldString("AIPROJNUM");
  str += buildFieldString("AISTOPOV*XX*");
  str += buildFieldString("AITIDATE");
  str += buildFieldString("AITINUM");
  str += buildFieldString("AITINUML*XX*");
  str += buildFieldString("AITYPCH");
  str += buildFieldString("AIVATAMNT");
  str += buildFieldString("AIVATAPPL");
  str += buildFieldString("ALIAS");
  str += buildFieldString("ALIASOPERATION");
  str += buildFieldString("ALIASPERSISTEDAFTERUSE");
  str += buildFieldString("ALIASUSAGE");
  str += buildFieldString("ALLOWCORRECTION");
  str += buildFieldString("AMOUNT");
  str += buildFieldString("AMOUNT*XX*");
  str += buildFieldString("AMOUNTHTVA");
  str += buildFieldString("AMOUNTTVA");
  str += buildFieldString("ARP_TRN");
  str += buildFieldString("BACKURL");
  str += buildFieldString("BATCHID");
  str += buildFieldString("BGCOLOR");
  str += buildFieldString("BLVERNUM");
  str += buildFieldString("BIC");
  str += buildFieldString("BIN");
  str += buildFieldString("BRAND");
  str += buildFieldString("BRANDVISUAL");
  str += buildFieldString("BROWSERACCEPTHEADER");
  str += buildFieldString("BROWSERCOLORDEPTH");
  str += buildFieldString("BROWSERJAVAENABLED");
  str += buildFieldString("BROWSERLANGUAGE");
  str += buildFieldString("BROWSERSCREENHEIGHT");
  str += buildFieldString("BROWSERSCREENWIDTH");
  str += buildFieldString("BROWSERTIMEZONE");
  str += buildFieldString("BROWSERUSERAGENT");
  str += buildFieldString("BUTTONBGCOLOR");
  str += buildFieldString("BUTTONTXTCOLOR");
  str += buildFieldString("CANCELURL");
  str += buildFieldString("CARDNO");
  str += buildFieldString("CATALOGURL");
  str += buildFieldString("CAVV_3D");
  str += buildFieldString("CAVVALGORITHM_3D");
  str += buildFieldString("CERTID");
  str += buildFieldString("CHECK_AAV");
  str += buildFieldString("CIVILITY");
  str += buildFieldString("CN");
  str += buildFieldString("COF_INITIATOR");
  str += buildFieldString("COF_SCHEDULE");
  str += buildFieldString("COF_TRANSACTION");
  str += buildFieldString("COM");
  str += buildFieldString("COMPLUS");
  str += buildFieldString("CONVCCY");
  str += buildFieldString("COSTCENTER");
  str += buildFieldString("COSTCODE");
  str += buildFieldString("CREDITCODE");
  str += buildFieldString("CREDITDEBIT");
  str += buildFieldString("CUID");
  str += buildFieldString("CURRENCY");
  str += buildFieldString("CVC");
  str += buildFieldString("CVCFLAG");
  str += buildFieldString("DATA");
  str += buildFieldString("DATATYPE");
  str += buildFieldString("DATEIN");
  str += buildFieldString("DATEOUT");
  str += buildFieldString("DBXML");
  str += buildFieldString("DCC_COMMPERC");
  str += buildFieldString("DCC_CONVAMOUNT");
  str += buildFieldString("DCC_CONVCCY");
  str += buildFieldString("DCC_EXCHRATE");
  str += buildFieldString("DCC_EXCHRATETS");
  str += buildFieldString("DCC_INDICATOR");
  str += buildFieldString("DCC_MARGINPERC");
  str += buildFieldString("DCC_REF");
  str += buildFieldString("DCC_SOURCE");
  str += buildFieldString("DCC_VALID");
  str += buildFieldString("DECLINEURL");
  str += buildFieldString("DELIVERYDATE");
  str += buildFieldString("DEVICE");
  str += buildFieldString("DISCOUNTRATE");
  str += buildFieldString("DISPLAYMODE");
  str += buildFieldString("ECI");
  str += buildFieldString("ECI_3D");
  str += buildFieldString("ECOM_BILLTO_COMPANY");
  str += buildFieldString("ECOM_BILLTO_POSTAL_CITY");
  str += buildFieldString("ECOM_BILLTO_POSTAL_COUNTRYCODE");
  str += buildFieldString("ECOM_BILLTO_POSTAL_COUNTY");
  str += buildFieldString("ECOM_BILLTO_POSTAL_NAME_FIRST");
  str += buildFieldString("ECOM_BILLTO_POSTAL_NAME_LAST");
  str += buildFieldString("ECOM_BILLTO_POSTAL_NAME_PREFIX");
  str += buildFieldString("ECOM_BILLTO_POSTAL_POSTALCODE");
  str += buildFieldString("ECOM_BILLTO_POSTAL_STREET_LINE1");
  str += buildFieldString("ECOM_BILLTO_POSTAL_STREET_LINE2");
  str += buildFieldString("ECOM_BILLTO_POSTAL_STREET_LINE3");
  str += buildFieldString("ECOM_BILLTO_POSTAL_STREET_NUMBER");
  str += buildFieldString("ECOM_BILLTO_TELECOM_MOBILE_NUMBER");
  str += buildFieldString("ECOM_BILLTO_TELECOM_PHONE_NUMBER");
  str += buildFieldString("ECOM_CONSUMERID");
  str += buildFieldString("ECOM_CONSUMER_GENDER");
  str += buildFieldString("ECOM_CONSUMEROGID");
  str += buildFieldString("ECOM_CONSUMERORDERID");
  str += buildFieldString("ECOM_CONSUMERUSERALIAS");
  str += buildFieldString("ECOM_CONSUMERUSERPWD");
  str += buildFieldString("ECOM_CONSUMERUSERID");
  str += buildFieldString("ECOM_ESTIMATEDDELIVERYDATE");
  str += buildFieldString("ECOM_ESTIMATEDELIVERYDATE");
  str += buildFieldString("ECOM_PAYMENT_CARD_EXPDATE_MONTH");
  str += buildFieldString("ECOM_PAYMENT_CARD_EXPDATE_YEAR");
  str += buildFieldString("ECOM_PAYMENT_CARD_NAME");
  str += buildFieldString("ECOM_PAYMENT_CARD_VERIFICATION");
  str += buildFieldString("ECOM_SHIPMETHOD");
  str += buildFieldString("ECOM_SHIPMETHODDETAILS");
  str += buildFieldString("ECOM_SHIPMETHODSPEED");
  str += buildFieldString("ECOM_SHIPMETHODTYPE");
  str += buildFieldString("ECOM_SHIPTO_COMPANY");
  str += buildFieldString("ECOM_SHIPTO_DOB");
  str += buildFieldString("ECOM_SHIPTO_ONLINE_EMAIL");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_CITY");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_COUNTRYCODE");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_COUNTY");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_NAME_FIRST");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_NAME_LAST");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_NAME_PREFIX");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_POSTALCODE");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_STATE");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_STREET_LINE1");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_STREET_LINE2");
  str += buildFieldString("ECOM_SHIPTO_POSTAL_STREET_NUMBER");
  str += buildFieldString("ECOM_SHIPTO_TELECOM_FAX_NUMBER");
  str += buildFieldString("ECOM_SHIPTO_TELECOM_MOBILE_NUMBER");
  str += buildFieldString("ECOM_SHIPTO_TELECOM_PHONE_NUMBER");
  str += buildFieldString("ECOM_SHIPTO_TVA");
  str += buildFieldString("ED");
  str += buildFieldString("EMAIL");
  str += buildFieldString("EXCEPTIONURL");
  str += buildFieldString("EXCLPMLIST");
  str += buildFieldString("EXECUTIONDATE*XX*");
  str += buildFieldString("FACEXCL*XX*");
  str += buildFieldString("FACTOTAL*XX*");
  str += buildFieldString("FIRSTCALL");
  str += buildFieldString("FLAG3D");
  str += buildFieldString("FONTTYPE");
  str += buildFieldString("FORCECODE1");
  str += buildFieldString("FORCECODE2");
  str += buildFieldString("FORCECODEHASH");
  str += buildFieldString("FORCEPROCESS");
  str += buildFieldString("FORCETP");
  str += buildFieldString("FP_ACTIV");
  str += buildFieldString("GENERIC_BL");
  str += buildFieldString("GIROPAY_ACCOUNT_NUMBER");
  str += buildFieldString("GIROPAY_BLZ");
  str += buildFieldString("GIROPAY_OWNER_NAME");
  str += buildFieldString("GLOBORDERID");
  str += buildFieldString("GUID");
  str += buildFieldString("HDFONTTYPE");
  str += buildFieldString("HDTBLBGCOLOR");
  str += buildFieldString("HDTBLTXTCOLOR");
  str += buildFieldString("HEIGHTFRAME");
  str += buildFieldString("HOMEURL");
  str += buildFieldString("HTTP_ACCEPT");
  str += buildFieldString("HTTP_USER_AGENT");
  str += buildFieldString("INCLUDE_BIN");
  str += buildFieldString("INCLUDE_COUNTRIES");
  str += buildFieldString("INITIAL_REC_TRN");
  str += buildFieldString("INVDATE");
  str += buildFieldString("INVDISCOUNT");
  str += buildFieldString("INVLEVEL");
  str += buildFieldString("INVORDERID");
  str += buildFieldString("ISSUERID");
  str += buildFieldString("IST_MOBILE");
  str += buildFieldString("ITEM_COUNT");
  str += buildFieldString("ITEMATTRIBUTES*XX*");
  str += buildFieldString("ITEMCATEGORY*XX*");
  str += buildFieldString("ITEMCOMMENTS*XX*");
  str += buildFieldString("ITEMDESC*XX*");
  str += buildFieldString("ITEMDISCOUNT*XX*");
  str += buildFieldString("ITEMFDMPRODUCTCATEG*XX*");
  str += buildFieldString("ITEMID*XX*");
  str += buildFieldString("ITEMNAME*XX*");
  str += buildFieldString("ITEMPRICE*XX*");
  str += buildFieldString("ITEMQUANT*XX*");
  str += buildFieldString("ITEMQUANTORIG*XX*");
  str += buildFieldString("ITEMUNITOFMEASURE*XX*");
  str += buildFieldString("ITEMVAT*XX*");
  str += buildFieldString("ITEMVATCODE*XX*");
  str += buildFieldString("ITEMWEIGHT*XX*");
  str += buildFieldString("LANGUAGE");
  str += buildFieldString("LEVEL1AUTHCPC");
  str += buildFieldString("LIDEXCL*XX*");
  str += buildFieldString("LIMITCLIENTSCRIPTUSAGE");
  str += buildFieldString("LINE_REF");
  str += buildFieldString("LINE_REF1");
  str += buildFieldString("LINE_REF2");
  str += buildFieldString("LINE_REF3");
  str += buildFieldString("LINE_REF4");
  str += buildFieldString("LINE_REF5");
  str += buildFieldString("LINE_REF6");
  str += buildFieldString("LIST_BIN");
  str += buildFieldString("LIST_COUNTRIES");
  str += buildFieldString("LOGO");
  str += buildFieldString("MANDATEID");
  str += buildFieldString("MAXITEMQUANT*XX*");
  str += buildFieldString("MERCHANTID");
  str += buildFieldString("MODE");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTAGEINDICATOR");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTCHANGE");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTCHANGEINDICATOR");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTDATE");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTPASSWORDCHANGE");
  str += buildFieldString("MPI.CARDHOLDERACCOUNTPASSWORDCHANGEINDICATOR");
  str += buildFieldString("MPI.CHALLENGEWINDOWSIZE");
  str += buildFieldString("MPI.DELIVERYEMAILADDRESS");
  str += buildFieldString("MPI.DELIVERYTIMEFRAME");
  str += buildFieldString("MPI.GIFTCARDAMOUNT");
  str += buildFieldString("MPI.GIFTCARDCOUNT");
  str += buildFieldString("MPI.GIFTCARDCURRENCY");
  str += buildFieldString("MPI.HOMEPHONE.COUNTRYCODE");
  str += buildFieldString("MPI.HOMEPHONE.SUBSCRIBER");
  str += buildFieldString("MPI.MOBILEPHONE.COUNTRYCODE");
  str += buildFieldString("MPI.MOBILEPHONE.SUBSCRIBER");
  str += buildFieldString("MPI.NUMBEROFPURCHASEWITHACCOUNTINTHELASTSIXMONTHS");
  str += buildFieldString("MPI.PAYMENTACCOUNTAGE");
  str += buildFieldString("MPI.PAYMENTACCOUNTAGEINDICATOR");
  str += buildFieldString("MPI.PREORDERDATE");
  str += buildFieldString("MPI.PREORDERPURCHASEINDICATOR");
  str += buildFieldString("MPI.PROVISIONATTEMPTSINTHELAST24HOURS");
  str += buildFieldString("MPI.REORDERITEMSINDICATOR");
  str += buildFieldString("MPI.SHIPPINGADDRESSUSAGE");
  str += buildFieldString("MPI.SHIPPINGADDRESSWASFIRSTUSED");
  str += buildFieldString("MPI.SHIPPINGINDICATOR");
  str += buildFieldString("MPI.SHIPPINGNAMEANDCARDHOLDERNAMEAREIDENTICAL");
  str += buildFieldString("MPI.SUSPICIOUSACCOUNTACTIVITYDETECTED");
  str += buildFieldString("MPI.THREEDSREQUESTORAUTHENTICATIONDATA");
  str += buildFieldString("MPI.THREEDSREQUESTORAUTHENTICATIONMETHOD");
  str += buildFieldString("MPI.THREEDSREQUESTORAUTHENTICATIONTIMESTAMP");
  str += buildFieldString("MPI.THREEDSREQUESTORCHALLENGEINDICATOR");
  str += buildFieldString("MPI.THREEDSREQUESTORPRIORAUTHENTICATIONDATA");
  str += buildFieldString("MPI.THREEDSREQUESTORPRIORAUTHENTICATIONMETHOD");
  str += buildFieldString("MPI.THREEDSREQUESTORPRIORAUTHENTICATIONTIMESTAMP");
  str += buildFieldString("MPI.THREEDSREQUESTORPRIORREFERENCE");
  str += buildFieldString("MPI.TRANSACTIONACTIVITYINTHELAST24HOURS");
  str += buildFieldString("MPI.TRANSACTIONACTIVITYLASTYEAR ");
  str += buildFieldString("MPI.TRANSACTIONTYPE");
  str += buildFieldString("MPI.WORKPHONE.COUNTRYCODE");
  str += buildFieldString("MPI.WORKPHONE.SUBSCRIBER");
  str += buildFieldString("MTIME");
  str += buildFieldString("MVER");
  str += buildFieldString("NETAMOUNT");
  str += buildFieldString("OPERATION");
  str += buildFieldString("ORDERID");
  str += buildFieldString("ORDERSHIPCOST");
  str += buildFieldString("ORDERSHIPMETH");
  str += buildFieldString("ORDERSHIPTAX");
  str += buildFieldString("ORDERSHIPTAXCODE");
  str += buildFieldString("ORIG");
  str += buildFieldString("OR_INVORDERID");
  str += buildFieldString("OR_ORDERID");
  str += buildFieldString("OWNERADDRESS");
  str += buildFieldString("OWNERADDRESS2");
  str += buildFieldString("OWNERCTY");
  str += buildFieldString("OWNERTELNO");
  str += buildFieldString("OWNERTELNO2");
  str += buildFieldString("OWNERTOWN");
  str += buildFieldString("OWNERZIP");
  str += buildFieldString("PAIDAMOUNT");
  str += buildFieldString("PARAMPLUS");
  str += buildFieldString("PARAMVAR");
  str += buildFieldString("PAYID");
  str += buildFieldString("PAYMETHOD");
  str += buildFieldString("PM");
  str += buildFieldString("PMLIST");
  str += buildFieldString("PMLISTPMLISTTYPE");
  str += buildFieldString("PMLISTTYPE");
  str += buildFieldString("PMLISTTYPEPMLIST");
  str += buildFieldString("PMTYPE");
  str += buildFieldString("POPUP");
  str += buildFieldString("POST");
  str += buildFieldString("PSPID");
  str += buildFieldString("PSWD");
  str += buildFieldString("RECIPIENTACCOUNTNUMBER");
  str += buildFieldString("RECIPIENTDOB");
  str += buildFieldString("RECIPIENTLASTNAME");
  str += buildFieldString("RECIPIENTZIP");
  str += buildFieldString("REF");
  str += buildFieldString("REFER");
  str += buildFieldString("REFID");
  str += buildFieldString("REFKIND");
  str += buildFieldString("REF_CUSTOMERID");
  str += buildFieldString("REF_CUSTOMERREF");
  str += buildFieldString("REGISTRED");
  str += buildFieldString("REMOTE_ADDR");
  str += buildFieldString("REQGENFIELDS");
  str += buildFieldString("RNPOFFERT");
  str += buildFieldString("RTIMEOUT");
  str += buildFieldString("RTIMEOUTREQUESTEDTIMEOUT");
  str += buildFieldString("SCORINGCLIENT");
  str += buildFieldString("SEQUENCETYPE");
  str += buildFieldString("SETT_BATCH");
  str += buildFieldString("SID");
  str += buildFieldString("SIGNDATE");
  str += buildFieldString("STATUS_3D");
  str += buildFieldString("SUBSCRIPTION_ID");
  str += buildFieldString("SUB_AM");
  str += buildFieldString("SUB_AMOUNT");
  str += buildFieldString("SUB_COM");
  str += buildFieldString("SUB_COMMENT");
  str += buildFieldString("SUB_CUR");
  str += buildFieldString("SUB_ENDDATE");
  str += buildFieldString("SUB_ORDERID");
  str += buildFieldString("SUB_PERIOD_MOMENT");
  str += buildFieldString("SUB_PERIOD_MOMENT_M");
  str += buildFieldString("SUB_PERIOD_MOMENT_WW");
  str += buildFieldString("SUB_PERIOD_NUMBER");
  str += buildFieldString("SUB_PERIOD_NUMBER_D");
  str += buildFieldString("SUB_PERIOD_NUMBER_M");
  str += buildFieldString("SUB_PERIOD_NUMBER_WW");
  str += buildFieldString("SUB_PERIOD_UNIT");
  str += buildFieldString("SUB_STARTDATE");
  str += buildFieldString("SUB_STATUS");
  str += buildFieldString("TAAL");
  str += buildFieldString("TAXINCLUDED*XX*");
  str += buildFieldString("TBLBGCOLOR");
  str += buildFieldString("TBLTXTCOLOR");
  str += buildFieldString("TID");
  str += buildFieldString("TITLE");
  str += buildFieldString("TOTALAMOUNT");
  str += buildFieldString("TP");
  str += buildFieldString("TRACK2");
  str += buildFieldString("TXTBADDR2");
  str += buildFieldString("TXTCOLOR");
  str += buildFieldString("TXTOKEN");
  str += buildFieldString("TXTOKENTXTOKENPAYPAL");
  str += buildFieldString("TXSHIPPING");
  str += buildFieldString("TXSHIPPINGLOCATIONPROFILE");
  str += buildFieldString("TXURL");
  str += buildFieldString("TXVERIFIER");
  str += buildFieldString("TYPE_COUNTRY");
  str += buildFieldString("UCAF_AUTHENTICATION_DATA");
  str += buildFieldString("UCAF_PAYMENT_CARD_CVC2");
  str += buildFieldString("UCAF_PAYMENT_CARD_EXPDATE_MONTH");
  str += buildFieldString("UCAF_PAYMENT_CARD_EXPDATE_YEAR");
  str += buildFieldString("UCAF_PAYMENT_CARD_NUMBER");
  str += buildFieldString("USERID");
  str += buildFieldString("USERTYPE");
  str += buildFieldString("VERSION");
  str += buildFieldString("WBTU_MSISDN");
  str += buildFieldString("WBTU_ORDERID");
  str += buildFieldString("WEIGHTUNIT");
  str += buildFieldString("WIN3DS");
  str += buildFieldString("WITHROOT");
  str += buildFieldString("XDL");
  
  //Complete the URL and Show it on screen and in the console log
  //the last parameter to add is the Sha1 signature
  document.getElementById('VKT_URL').value =
    //"https://secure.paypage.be/ncol/test/orderstandard_utf8.asp?" +
    "https://secure.paypage.be/ncol/prod/orderstandard_utf8.asp?" +
    str + "SHASIGN=" + document.getElementById('SHASIGN').value;
  console.log("VKT_URL: "+document.getElementById('VKT_URL').value);
}

function generateQr() {
  console.log("entered generateQr()");
  var elText = document.getElementById("VKT_URL");
  if (!elText.value) {
    alert("De URL is nog niet gegenereerd!");
    elText.value = "klik op de URL knop"
    elText.focus();
    return;
  } else qrcode.makeCode(elText.value);
}
